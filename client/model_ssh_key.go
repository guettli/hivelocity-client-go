/*
Hivelocity API

Interact with Hivelocity

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// SshKey struct for SshKey
type SshKey struct {
	Name      string `json:"name"`
	PublicKey string `json:"publicKey"`
}

// NewSshKey instantiates a new SshKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshKey(name string, publicKey string) *SshKey {
	this := SshKey{}
	this.Name = name
	this.PublicKey = publicKey
	return &this
}

// NewSshKeyWithDefaults instantiates a new SshKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshKeyWithDefaults() *SshKey {
	this := SshKey{}
	return &this
}

// GetName returns the Name field value
func (o *SshKey) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SshKey) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SshKey) SetName(v string) {
	o.Name = v
}

// GetPublicKey returns the PublicKey field value
func (o *SshKey) GetPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
func (o *SshKey) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicKey, true
}

// SetPublicKey sets field value
func (o *SshKey) SetPublicKey(v string) {
	o.PublicKey = v
}

func (o SshKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["publicKey"] = o.PublicKey
	}
	return json.Marshal(toSerialize)
}

type NullableSshKey struct {
	value *SshKey
	isSet bool
}

func (v NullableSshKey) Get() *SshKey {
	return v.value
}

func (v *NullableSshKey) Set(val *SshKey) {
	v.value = val
	v.isSet = true
}

func (v NullableSshKey) IsSet() bool {
	return v.isSet
}

func (v *NullableSshKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshKey(val *SshKey) *NullableSshKey {
	return &NullableSshKey{value: val, isSet: true}
}

func (v NullableSshKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
