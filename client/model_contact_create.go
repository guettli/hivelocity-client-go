/*
Hivelocity API

Interact with Hivelocity

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ContactCreate struct for ContactCreate
type ContactCreate struct {
	Active      int32   `json:"active"`
	Phone       *string `json:"phone,omitempty"`
	Email       string  `json:"email"`
	FullName    string  `json:"fullName"`
	Password    *string `json:"password,omitempty"`
	Description *string `json:"description,omitempty"`
}

// NewContactCreate instantiates a new ContactCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactCreate(active int32, email string, fullName string) *ContactCreate {
	this := ContactCreate{}
	this.Active = active
	this.Email = email
	this.FullName = fullName
	var password string = "c879b075e42bb6b2364a6557f9a5f208"
	this.Password = &password
	return &this
}

// NewContactCreateWithDefaults instantiates a new ContactCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactCreateWithDefaults() *ContactCreate {
	this := ContactCreate{}
	var password string = "c879b075e42bb6b2364a6557f9a5f208"
	this.Password = &password
	return &this
}

// GetActive returns the Active field value
func (o *ContactCreate) GetActive() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *ContactCreate) GetActiveOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *ContactCreate) SetActive(v int32) {
	o.Active = v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *ContactCreate) GetPhone() string {
	if o == nil || isNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreate) GetPhoneOk() (*string, bool) {
	if o == nil || isNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *ContactCreate) HasPhone() bool {
	if o != nil && !isNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *ContactCreate) SetPhone(v string) {
	o.Phone = &v
}

// GetEmail returns the Email field value
func (o *ContactCreate) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ContactCreate) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ContactCreate) SetEmail(v string) {
	o.Email = v
}

// GetFullName returns the FullName field value
func (o *ContactCreate) GetFullName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value
// and a boolean to check if the value has been set.
func (o *ContactCreate) GetFullNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FullName, true
}

// SetFullName sets field value
func (o *ContactCreate) SetFullName(v string) {
	o.FullName = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ContactCreate) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreate) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ContactCreate) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ContactCreate) SetPassword(v string) {
	o.Password = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ContactCreate) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ContactCreate) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ContactCreate) SetDescription(v string) {
	o.Description = &v
}

func (o ContactCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["active"] = o.Active
	}
	if !isNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["fullName"] = o.FullName
	}
	if !isNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableContactCreate struct {
	value *ContactCreate
	isSet bool
}

func (v NullableContactCreate) Get() *ContactCreate {
	return v.value
}

func (v *NullableContactCreate) Set(val *ContactCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableContactCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableContactCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactCreate(val *ContactCreate) *NullableContactCreate {
	return &NullableContactCreate{value: val, isSet: true}
}

func (v NullableContactCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
