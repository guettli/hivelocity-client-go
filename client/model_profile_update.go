/*
Hivelocity API

Interact with Hivelocity

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ProfileUpdate struct for ProfileUpdate
type ProfileUpdate struct {
	City                    *string `json:"city,omitempty"`
	RequirePayPalOauthLogin *string `json:"requirePayPalOauthLogin,omitempty"`
	Phone                   *string `json:"phone,omitempty"`
	RequireOauthLogin       *string `json:"requireOauthLogin,omitempty"`
	Zip                     *string `json:"zip,omitempty"`
	Email                   *string `json:"email,omitempty"`
	FullName                *string `json:"fullName,omitempty"`
	Address                 *string `json:"address,omitempty"`
	Last                    *string `json:"last,omitempty"`
	Password                *string `json:"password,omitempty"`
	DirectToZendesk         *string `json:"directToZendesk,omitempty"`
	Country                 *string `json:"country,omitempty"`
	State                   *string `json:"state,omitempty"`
	First                   *string `json:"first,omitempty"`
	Company                 *string `json:"company,omitempty"`
}

// NewProfileUpdate instantiates a new ProfileUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileUpdate() *ProfileUpdate {
	this := ProfileUpdate{}
	return &this
}

// NewProfileUpdateWithDefaults instantiates a new ProfileUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileUpdateWithDefaults() *ProfileUpdate {
	this := ProfileUpdate{}
	return &this
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *ProfileUpdate) GetCity() string {
	if o == nil || isNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileUpdate) GetCityOk() (*string, bool) {
	if o == nil || isNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *ProfileUpdate) HasCity() bool {
	if o != nil && !isNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *ProfileUpdate) SetCity(v string) {
	o.City = &v
}

// GetRequirePayPalOauthLogin returns the RequirePayPalOauthLogin field value if set, zero value otherwise.
func (o *ProfileUpdate) GetRequirePayPalOauthLogin() string {
	if o == nil || isNil(o.RequirePayPalOauthLogin) {
		var ret string
		return ret
	}
	return *o.RequirePayPalOauthLogin
}

// GetRequirePayPalOauthLoginOk returns a tuple with the RequirePayPalOauthLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileUpdate) GetRequirePayPalOauthLoginOk() (*string, bool) {
	if o == nil || isNil(o.RequirePayPalOauthLogin) {
		return nil, false
	}
	return o.RequirePayPalOauthLogin, true
}

// HasRequirePayPalOauthLogin returns a boolean if a field has been set.
func (o *ProfileUpdate) HasRequirePayPalOauthLogin() bool {
	if o != nil && !isNil(o.RequirePayPalOauthLogin) {
		return true
	}

	return false
}

// SetRequirePayPalOauthLogin gets a reference to the given string and assigns it to the RequirePayPalOauthLogin field.
func (o *ProfileUpdate) SetRequirePayPalOauthLogin(v string) {
	o.RequirePayPalOauthLogin = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *ProfileUpdate) GetPhone() string {
	if o == nil || isNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileUpdate) GetPhoneOk() (*string, bool) {
	if o == nil || isNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *ProfileUpdate) HasPhone() bool {
	if o != nil && !isNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *ProfileUpdate) SetPhone(v string) {
	o.Phone = &v
}

// GetRequireOauthLogin returns the RequireOauthLogin field value if set, zero value otherwise.
func (o *ProfileUpdate) GetRequireOauthLogin() string {
	if o == nil || isNil(o.RequireOauthLogin) {
		var ret string
		return ret
	}
	return *o.RequireOauthLogin
}

// GetRequireOauthLoginOk returns a tuple with the RequireOauthLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileUpdate) GetRequireOauthLoginOk() (*string, bool) {
	if o == nil || isNil(o.RequireOauthLogin) {
		return nil, false
	}
	return o.RequireOauthLogin, true
}

// HasRequireOauthLogin returns a boolean if a field has been set.
func (o *ProfileUpdate) HasRequireOauthLogin() bool {
	if o != nil && !isNil(o.RequireOauthLogin) {
		return true
	}

	return false
}

// SetRequireOauthLogin gets a reference to the given string and assigns it to the RequireOauthLogin field.
func (o *ProfileUpdate) SetRequireOauthLogin(v string) {
	o.RequireOauthLogin = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *ProfileUpdate) GetZip() string {
	if o == nil || isNil(o.Zip) {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileUpdate) GetZipOk() (*string, bool) {
	if o == nil || isNil(o.Zip) {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *ProfileUpdate) HasZip() bool {
	if o != nil && !isNil(o.Zip) {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *ProfileUpdate) SetZip(v string) {
	o.Zip = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ProfileUpdate) GetEmail() string {
	if o == nil || isNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileUpdate) GetEmailOk() (*string, bool) {
	if o == nil || isNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ProfileUpdate) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ProfileUpdate) SetEmail(v string) {
	o.Email = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *ProfileUpdate) GetFullName() string {
	if o == nil || isNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileUpdate) GetFullNameOk() (*string, bool) {
	if o == nil || isNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *ProfileUpdate) HasFullName() bool {
	if o != nil && !isNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *ProfileUpdate) SetFullName(v string) {
	o.FullName = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ProfileUpdate) GetAddress() string {
	if o == nil || isNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileUpdate) GetAddressOk() (*string, bool) {
	if o == nil || isNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ProfileUpdate) HasAddress() bool {
	if o != nil && !isNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *ProfileUpdate) SetAddress(v string) {
	o.Address = &v
}

// GetLast returns the Last field value if set, zero value otherwise.
func (o *ProfileUpdate) GetLast() string {
	if o == nil || isNil(o.Last) {
		var ret string
		return ret
	}
	return *o.Last
}

// GetLastOk returns a tuple with the Last field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileUpdate) GetLastOk() (*string, bool) {
	if o == nil || isNil(o.Last) {
		return nil, false
	}
	return o.Last, true
}

// HasLast returns a boolean if a field has been set.
func (o *ProfileUpdate) HasLast() bool {
	if o != nil && !isNil(o.Last) {
		return true
	}

	return false
}

// SetLast gets a reference to the given string and assigns it to the Last field.
func (o *ProfileUpdate) SetLast(v string) {
	o.Last = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ProfileUpdate) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileUpdate) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ProfileUpdate) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ProfileUpdate) SetPassword(v string) {
	o.Password = &v
}

// GetDirectToZendesk returns the DirectToZendesk field value if set, zero value otherwise.
func (o *ProfileUpdate) GetDirectToZendesk() string {
	if o == nil || isNil(o.DirectToZendesk) {
		var ret string
		return ret
	}
	return *o.DirectToZendesk
}

// GetDirectToZendeskOk returns a tuple with the DirectToZendesk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileUpdate) GetDirectToZendeskOk() (*string, bool) {
	if o == nil || isNil(o.DirectToZendesk) {
		return nil, false
	}
	return o.DirectToZendesk, true
}

// HasDirectToZendesk returns a boolean if a field has been set.
func (o *ProfileUpdate) HasDirectToZendesk() bool {
	if o != nil && !isNil(o.DirectToZendesk) {
		return true
	}

	return false
}

// SetDirectToZendesk gets a reference to the given string and assigns it to the DirectToZendesk field.
func (o *ProfileUpdate) SetDirectToZendesk(v string) {
	o.DirectToZendesk = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *ProfileUpdate) GetCountry() string {
	if o == nil || isNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileUpdate) GetCountryOk() (*string, bool) {
	if o == nil || isNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *ProfileUpdate) HasCountry() bool {
	if o != nil && !isNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *ProfileUpdate) SetCountry(v string) {
	o.Country = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ProfileUpdate) GetState() string {
	if o == nil || isNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileUpdate) GetStateOk() (*string, bool) {
	if o == nil || isNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ProfileUpdate) HasState() bool {
	if o != nil && !isNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ProfileUpdate) SetState(v string) {
	o.State = &v
}

// GetFirst returns the First field value if set, zero value otherwise.
func (o *ProfileUpdate) GetFirst() string {
	if o == nil || isNil(o.First) {
		var ret string
		return ret
	}
	return *o.First
}

// GetFirstOk returns a tuple with the First field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileUpdate) GetFirstOk() (*string, bool) {
	if o == nil || isNil(o.First) {
		return nil, false
	}
	return o.First, true
}

// HasFirst returns a boolean if a field has been set.
func (o *ProfileUpdate) HasFirst() bool {
	if o != nil && !isNil(o.First) {
		return true
	}

	return false
}

// SetFirst gets a reference to the given string and assigns it to the First field.
func (o *ProfileUpdate) SetFirst(v string) {
	o.First = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *ProfileUpdate) GetCompany() string {
	if o == nil || isNil(o.Company) {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileUpdate) GetCompanyOk() (*string, bool) {
	if o == nil || isNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *ProfileUpdate) HasCompany() bool {
	if o != nil && !isNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *ProfileUpdate) SetCompany(v string) {
	o.Company = &v
}

func (o ProfileUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !isNil(o.RequirePayPalOauthLogin) {
		toSerialize["requirePayPalOauthLogin"] = o.RequirePayPalOauthLogin
	}
	if !isNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !isNil(o.RequireOauthLogin) {
		toSerialize["requireOauthLogin"] = o.RequireOauthLogin
	}
	if !isNil(o.Zip) {
		toSerialize["zip"] = o.Zip
	}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !isNil(o.FullName) {
		toSerialize["fullName"] = o.FullName
	}
	if !isNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !isNil(o.Last) {
		toSerialize["last"] = o.Last
	}
	if !isNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !isNil(o.DirectToZendesk) {
		toSerialize["directToZendesk"] = o.DirectToZendesk
	}
	if !isNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !isNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !isNil(o.First) {
		toSerialize["first"] = o.First
	}
	if !isNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	return json.Marshal(toSerialize)
}

type NullableProfileUpdate struct {
	value *ProfileUpdate
	isSet bool
}

func (v NullableProfileUpdate) Get() *ProfileUpdate {
	return v.value
}

func (v *NullableProfileUpdate) Set(val *ProfileUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileUpdate(val *ProfileUpdate) *NullableProfileUpdate {
	return &NullableProfileUpdate{value: val, isSet: true}
}

func (v NullableProfileUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
