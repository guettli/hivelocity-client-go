/*
Hivelocity API

Interact with Hivelocity

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// Stock struct for Stock
type Stock struct {
	// A facility code. For example `NYC1`.
	DataCenter *string `json:"data_center,omitempty"`
	// Additional hourly fee for this `product_id` in this `data_center`.
	HourlyLocationPremium *float32 `json:"hourly_location_premium,omitempty"`
	// Human readable drive specs. Can include multiple drives.
	ProductDrive *string `json:"product_drive,omitempty"`
	// true|false if edge site.
	Edge *bool `json:"edge,omitempty"`
	// available|limited|unavailable. Limited denotes minimal stock.
	Stock *string `json:"stock,omitempty"`
	// Price per 2 year period (24 months).
	ProductBiennialPrice *float32 `json:"product_biennial_price,omitempty"`
	// Additional biennial fee for this `product_id` in this `data_center`.
	BiennialLocationPremium *float32 `json:"biennial_location_premium,omitempty"`
	// Additional monthly fee for this `product_id` in this `data_center`.
	MonthlyLocationPremium *float32 `json:"monthly_location_premium,omitempty"`
	// Price per hour.
	ProductHourlyPrice *float32 `json:"product_hourly_price,omitempty"`
	// Additional triennial fee for this `product_id` in this `data_center`.
	TriennialLocationPremium *float32 `json:"triennial_location_premium,omitempty"`
	// true|false if core site.
	Core *bool `json:"core,omitempty"`
	// Additional annual fee for this `product_id` in this `data_center`.
	AnnuallyLocationPremium *float32 `json:"annually_location_premium,omitempty"`
	// Retail price of product. Use with `product_on_sale`.
	ProductOriginalPrice *float32 `json:"product_original_price,omitempty"`
	// Price per year (12 months).
	ProductAnnuallyPrice *float32 `json:"product_annually_price,omitempty"`
	// Additional semi-annual fee for this `product_id` in this `data_center`.
	SemiAnnuallyLocationPremium *float32 `json:"semi_annually_location_premium,omitempty"`
	// Price per half year (6 months).
	ProductSemiAnnuallyPrice *float32 `json:"product_semi_annually_price,omitempty"`
	// Human readable networking specs in the format: Free Outbound Transfer / NIC Size
	ProductBandwidth *string `json:"product_bandwidth,omitempty"`
	// The unique ID of this product.
	ProductId *int32 `json:"product_id,omitempty"`
	// Price per month.
	ProductMonthlyPrice *float32 `json:"product_monthly_price,omitempty"`
	// Price per 3 year period (36 months).
	ProductTriennialPrice *float32 `json:"product_triennial_price,omitempty"`
	// Human readable CPU specs.
	ProductCpu *string `json:"product_cpu,omitempty"`
	// Human readable CPU core and thread info in HTML format.
	ProductCpuCores *string `json:"product_cpu_cores,omitempty"`
	// Human readable GPU specs.
	ProductGpu *string `json:"product_gpu,omitempty"`
	// Additional quarterly fee for this `product_id` in this `data_center`.
	QuarterlyLocationPremium *float32 `json:"quarterly_location_premium,omitempty"`
	// The unique name of this product.
	ProductName *string `json:"product_name,omitempty"`
	// Price per quarter (3 months).
	ProductQuarterlyPrice *float32 `json:"product_quarterly_price,omitempty"`
	// true|false. Use with `product_original_price`.
	ProductOnSale *bool `json:"product_on_sale,omitempty"`
	// Human readable memory specs.
	ProductMemory *string `json:"product_memory,omitempty"`
	// JSON CPU info for cores, threads, sockets, and vCPUs.
	ProcessorInfo map[string]interface{} `json:"processor_info,omitempty"`
	// Orders for the periods in the array will fail. Possible values: hourly|monthly|quarterly|semi-annually|biennial|triennial
	ProductDisabledBillingPeriods []string `json:"product_disabled_billing_periods,omitempty"`
	// *DEPRECATED*.
	ProductDisplayPrice *float32 `json:"product_display_price,omitempty"`
}

// NewStock instantiates a new Stock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStock() *Stock {
	this := Stock{}
	return &this
}

// NewStockWithDefaults instantiates a new Stock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStockWithDefaults() *Stock {
	this := Stock{}
	return &this
}

// GetDataCenter returns the DataCenter field value if set, zero value otherwise.
func (o *Stock) GetDataCenter() string {
	if o == nil || isNil(o.DataCenter) {
		var ret string
		return ret
	}
	return *o.DataCenter
}

// GetDataCenterOk returns a tuple with the DataCenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetDataCenterOk() (*string, bool) {
	if o == nil || isNil(o.DataCenter) {
		return nil, false
	}
	return o.DataCenter, true
}

// HasDataCenter returns a boolean if a field has been set.
func (o *Stock) HasDataCenter() bool {
	if o != nil && !isNil(o.DataCenter) {
		return true
	}

	return false
}

// SetDataCenter gets a reference to the given string and assigns it to the DataCenter field.
func (o *Stock) SetDataCenter(v string) {
	o.DataCenter = &v
}

// GetHourlyLocationPremium returns the HourlyLocationPremium field value if set, zero value otherwise.
func (o *Stock) GetHourlyLocationPremium() float32 {
	if o == nil || isNil(o.HourlyLocationPremium) {
		var ret float32
		return ret
	}
	return *o.HourlyLocationPremium
}

// GetHourlyLocationPremiumOk returns a tuple with the HourlyLocationPremium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetHourlyLocationPremiumOk() (*float32, bool) {
	if o == nil || isNil(o.HourlyLocationPremium) {
		return nil, false
	}
	return o.HourlyLocationPremium, true
}

// HasHourlyLocationPremium returns a boolean if a field has been set.
func (o *Stock) HasHourlyLocationPremium() bool {
	if o != nil && !isNil(o.HourlyLocationPremium) {
		return true
	}

	return false
}

// SetHourlyLocationPremium gets a reference to the given float32 and assigns it to the HourlyLocationPremium field.
func (o *Stock) SetHourlyLocationPremium(v float32) {
	o.HourlyLocationPremium = &v
}

// GetProductDrive returns the ProductDrive field value if set, zero value otherwise.
func (o *Stock) GetProductDrive() string {
	if o == nil || isNil(o.ProductDrive) {
		var ret string
		return ret
	}
	return *o.ProductDrive
}

// GetProductDriveOk returns a tuple with the ProductDrive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductDriveOk() (*string, bool) {
	if o == nil || isNil(o.ProductDrive) {
		return nil, false
	}
	return o.ProductDrive, true
}

// HasProductDrive returns a boolean if a field has been set.
func (o *Stock) HasProductDrive() bool {
	if o != nil && !isNil(o.ProductDrive) {
		return true
	}

	return false
}

// SetProductDrive gets a reference to the given string and assigns it to the ProductDrive field.
func (o *Stock) SetProductDrive(v string) {
	o.ProductDrive = &v
}

// GetEdge returns the Edge field value if set, zero value otherwise.
func (o *Stock) GetEdge() bool {
	if o == nil || isNil(o.Edge) {
		var ret bool
		return ret
	}
	return *o.Edge
}

// GetEdgeOk returns a tuple with the Edge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetEdgeOk() (*bool, bool) {
	if o == nil || isNil(o.Edge) {
		return nil, false
	}
	return o.Edge, true
}

// HasEdge returns a boolean if a field has been set.
func (o *Stock) HasEdge() bool {
	if o != nil && !isNil(o.Edge) {
		return true
	}

	return false
}

// SetEdge gets a reference to the given bool and assigns it to the Edge field.
func (o *Stock) SetEdge(v bool) {
	o.Edge = &v
}

// GetStock returns the Stock field value if set, zero value otherwise.
func (o *Stock) GetStock() string {
	if o == nil || isNil(o.Stock) {
		var ret string
		return ret
	}
	return *o.Stock
}

// GetStockOk returns a tuple with the Stock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetStockOk() (*string, bool) {
	if o == nil || isNil(o.Stock) {
		return nil, false
	}
	return o.Stock, true
}

// HasStock returns a boolean if a field has been set.
func (o *Stock) HasStock() bool {
	if o != nil && !isNil(o.Stock) {
		return true
	}

	return false
}

// SetStock gets a reference to the given string and assigns it to the Stock field.
func (o *Stock) SetStock(v string) {
	o.Stock = &v
}

// GetProductBiennialPrice returns the ProductBiennialPrice field value if set, zero value otherwise.
func (o *Stock) GetProductBiennialPrice() float32 {
	if o == nil || isNil(o.ProductBiennialPrice) {
		var ret float32
		return ret
	}
	return *o.ProductBiennialPrice
}

// GetProductBiennialPriceOk returns a tuple with the ProductBiennialPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductBiennialPriceOk() (*float32, bool) {
	if o == nil || isNil(o.ProductBiennialPrice) {
		return nil, false
	}
	return o.ProductBiennialPrice, true
}

// HasProductBiennialPrice returns a boolean if a field has been set.
func (o *Stock) HasProductBiennialPrice() bool {
	if o != nil && !isNil(o.ProductBiennialPrice) {
		return true
	}

	return false
}

// SetProductBiennialPrice gets a reference to the given float32 and assigns it to the ProductBiennialPrice field.
func (o *Stock) SetProductBiennialPrice(v float32) {
	o.ProductBiennialPrice = &v
}

// GetBiennialLocationPremium returns the BiennialLocationPremium field value if set, zero value otherwise.
func (o *Stock) GetBiennialLocationPremium() float32 {
	if o == nil || isNil(o.BiennialLocationPremium) {
		var ret float32
		return ret
	}
	return *o.BiennialLocationPremium
}

// GetBiennialLocationPremiumOk returns a tuple with the BiennialLocationPremium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetBiennialLocationPremiumOk() (*float32, bool) {
	if o == nil || isNil(o.BiennialLocationPremium) {
		return nil, false
	}
	return o.BiennialLocationPremium, true
}

// HasBiennialLocationPremium returns a boolean if a field has been set.
func (o *Stock) HasBiennialLocationPremium() bool {
	if o != nil && !isNil(o.BiennialLocationPremium) {
		return true
	}

	return false
}

// SetBiennialLocationPremium gets a reference to the given float32 and assigns it to the BiennialLocationPremium field.
func (o *Stock) SetBiennialLocationPremium(v float32) {
	o.BiennialLocationPremium = &v
}

// GetMonthlyLocationPremium returns the MonthlyLocationPremium field value if set, zero value otherwise.
func (o *Stock) GetMonthlyLocationPremium() float32 {
	if o == nil || isNil(o.MonthlyLocationPremium) {
		var ret float32
		return ret
	}
	return *o.MonthlyLocationPremium
}

// GetMonthlyLocationPremiumOk returns a tuple with the MonthlyLocationPremium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetMonthlyLocationPremiumOk() (*float32, bool) {
	if o == nil || isNil(o.MonthlyLocationPremium) {
		return nil, false
	}
	return o.MonthlyLocationPremium, true
}

// HasMonthlyLocationPremium returns a boolean if a field has been set.
func (o *Stock) HasMonthlyLocationPremium() bool {
	if o != nil && !isNil(o.MonthlyLocationPremium) {
		return true
	}

	return false
}

// SetMonthlyLocationPremium gets a reference to the given float32 and assigns it to the MonthlyLocationPremium field.
func (o *Stock) SetMonthlyLocationPremium(v float32) {
	o.MonthlyLocationPremium = &v
}

// GetProductHourlyPrice returns the ProductHourlyPrice field value if set, zero value otherwise.
func (o *Stock) GetProductHourlyPrice() float32 {
	if o == nil || isNil(o.ProductHourlyPrice) {
		var ret float32
		return ret
	}
	return *o.ProductHourlyPrice
}

// GetProductHourlyPriceOk returns a tuple with the ProductHourlyPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductHourlyPriceOk() (*float32, bool) {
	if o == nil || isNil(o.ProductHourlyPrice) {
		return nil, false
	}
	return o.ProductHourlyPrice, true
}

// HasProductHourlyPrice returns a boolean if a field has been set.
func (o *Stock) HasProductHourlyPrice() bool {
	if o != nil && !isNil(o.ProductHourlyPrice) {
		return true
	}

	return false
}

// SetProductHourlyPrice gets a reference to the given float32 and assigns it to the ProductHourlyPrice field.
func (o *Stock) SetProductHourlyPrice(v float32) {
	o.ProductHourlyPrice = &v
}

// GetTriennialLocationPremium returns the TriennialLocationPremium field value if set, zero value otherwise.
func (o *Stock) GetTriennialLocationPremium() float32 {
	if o == nil || isNil(o.TriennialLocationPremium) {
		var ret float32
		return ret
	}
	return *o.TriennialLocationPremium
}

// GetTriennialLocationPremiumOk returns a tuple with the TriennialLocationPremium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetTriennialLocationPremiumOk() (*float32, bool) {
	if o == nil || isNil(o.TriennialLocationPremium) {
		return nil, false
	}
	return o.TriennialLocationPremium, true
}

// HasTriennialLocationPremium returns a boolean if a field has been set.
func (o *Stock) HasTriennialLocationPremium() bool {
	if o != nil && !isNil(o.TriennialLocationPremium) {
		return true
	}

	return false
}

// SetTriennialLocationPremium gets a reference to the given float32 and assigns it to the TriennialLocationPremium field.
func (o *Stock) SetTriennialLocationPremium(v float32) {
	o.TriennialLocationPremium = &v
}

// GetCore returns the Core field value if set, zero value otherwise.
func (o *Stock) GetCore() bool {
	if o == nil || isNil(o.Core) {
		var ret bool
		return ret
	}
	return *o.Core
}

// GetCoreOk returns a tuple with the Core field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetCoreOk() (*bool, bool) {
	if o == nil || isNil(o.Core) {
		return nil, false
	}
	return o.Core, true
}

// HasCore returns a boolean if a field has been set.
func (o *Stock) HasCore() bool {
	if o != nil && !isNil(o.Core) {
		return true
	}

	return false
}

// SetCore gets a reference to the given bool and assigns it to the Core field.
func (o *Stock) SetCore(v bool) {
	o.Core = &v
}

// GetAnnuallyLocationPremium returns the AnnuallyLocationPremium field value if set, zero value otherwise.
func (o *Stock) GetAnnuallyLocationPremium() float32 {
	if o == nil || isNil(o.AnnuallyLocationPremium) {
		var ret float32
		return ret
	}
	return *o.AnnuallyLocationPremium
}

// GetAnnuallyLocationPremiumOk returns a tuple with the AnnuallyLocationPremium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetAnnuallyLocationPremiumOk() (*float32, bool) {
	if o == nil || isNil(o.AnnuallyLocationPremium) {
		return nil, false
	}
	return o.AnnuallyLocationPremium, true
}

// HasAnnuallyLocationPremium returns a boolean if a field has been set.
func (o *Stock) HasAnnuallyLocationPremium() bool {
	if o != nil && !isNil(o.AnnuallyLocationPremium) {
		return true
	}

	return false
}

// SetAnnuallyLocationPremium gets a reference to the given float32 and assigns it to the AnnuallyLocationPremium field.
func (o *Stock) SetAnnuallyLocationPremium(v float32) {
	o.AnnuallyLocationPremium = &v
}

// GetProductOriginalPrice returns the ProductOriginalPrice field value if set, zero value otherwise.
func (o *Stock) GetProductOriginalPrice() float32 {
	if o == nil || isNil(o.ProductOriginalPrice) {
		var ret float32
		return ret
	}
	return *o.ProductOriginalPrice
}

// GetProductOriginalPriceOk returns a tuple with the ProductOriginalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductOriginalPriceOk() (*float32, bool) {
	if o == nil || isNil(o.ProductOriginalPrice) {
		return nil, false
	}
	return o.ProductOriginalPrice, true
}

// HasProductOriginalPrice returns a boolean if a field has been set.
func (o *Stock) HasProductOriginalPrice() bool {
	if o != nil && !isNil(o.ProductOriginalPrice) {
		return true
	}

	return false
}

// SetProductOriginalPrice gets a reference to the given float32 and assigns it to the ProductOriginalPrice field.
func (o *Stock) SetProductOriginalPrice(v float32) {
	o.ProductOriginalPrice = &v
}

// GetProductAnnuallyPrice returns the ProductAnnuallyPrice field value if set, zero value otherwise.
func (o *Stock) GetProductAnnuallyPrice() float32 {
	if o == nil || isNil(o.ProductAnnuallyPrice) {
		var ret float32
		return ret
	}
	return *o.ProductAnnuallyPrice
}

// GetProductAnnuallyPriceOk returns a tuple with the ProductAnnuallyPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductAnnuallyPriceOk() (*float32, bool) {
	if o == nil || isNil(o.ProductAnnuallyPrice) {
		return nil, false
	}
	return o.ProductAnnuallyPrice, true
}

// HasProductAnnuallyPrice returns a boolean if a field has been set.
func (o *Stock) HasProductAnnuallyPrice() bool {
	if o != nil && !isNil(o.ProductAnnuallyPrice) {
		return true
	}

	return false
}

// SetProductAnnuallyPrice gets a reference to the given float32 and assigns it to the ProductAnnuallyPrice field.
func (o *Stock) SetProductAnnuallyPrice(v float32) {
	o.ProductAnnuallyPrice = &v
}

// GetSemiAnnuallyLocationPremium returns the SemiAnnuallyLocationPremium field value if set, zero value otherwise.
func (o *Stock) GetSemiAnnuallyLocationPremium() float32 {
	if o == nil || isNil(o.SemiAnnuallyLocationPremium) {
		var ret float32
		return ret
	}
	return *o.SemiAnnuallyLocationPremium
}

// GetSemiAnnuallyLocationPremiumOk returns a tuple with the SemiAnnuallyLocationPremium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetSemiAnnuallyLocationPremiumOk() (*float32, bool) {
	if o == nil || isNil(o.SemiAnnuallyLocationPremium) {
		return nil, false
	}
	return o.SemiAnnuallyLocationPremium, true
}

// HasSemiAnnuallyLocationPremium returns a boolean if a field has been set.
func (o *Stock) HasSemiAnnuallyLocationPremium() bool {
	if o != nil && !isNil(o.SemiAnnuallyLocationPremium) {
		return true
	}

	return false
}

// SetSemiAnnuallyLocationPremium gets a reference to the given float32 and assigns it to the SemiAnnuallyLocationPremium field.
func (o *Stock) SetSemiAnnuallyLocationPremium(v float32) {
	o.SemiAnnuallyLocationPremium = &v
}

// GetProductSemiAnnuallyPrice returns the ProductSemiAnnuallyPrice field value if set, zero value otherwise.
func (o *Stock) GetProductSemiAnnuallyPrice() float32 {
	if o == nil || isNil(o.ProductSemiAnnuallyPrice) {
		var ret float32
		return ret
	}
	return *o.ProductSemiAnnuallyPrice
}

// GetProductSemiAnnuallyPriceOk returns a tuple with the ProductSemiAnnuallyPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductSemiAnnuallyPriceOk() (*float32, bool) {
	if o == nil || isNil(o.ProductSemiAnnuallyPrice) {
		return nil, false
	}
	return o.ProductSemiAnnuallyPrice, true
}

// HasProductSemiAnnuallyPrice returns a boolean if a field has been set.
func (o *Stock) HasProductSemiAnnuallyPrice() bool {
	if o != nil && !isNil(o.ProductSemiAnnuallyPrice) {
		return true
	}

	return false
}

// SetProductSemiAnnuallyPrice gets a reference to the given float32 and assigns it to the ProductSemiAnnuallyPrice field.
func (o *Stock) SetProductSemiAnnuallyPrice(v float32) {
	o.ProductSemiAnnuallyPrice = &v
}

// GetProductBandwidth returns the ProductBandwidth field value if set, zero value otherwise.
func (o *Stock) GetProductBandwidth() string {
	if o == nil || isNil(o.ProductBandwidth) {
		var ret string
		return ret
	}
	return *o.ProductBandwidth
}

// GetProductBandwidthOk returns a tuple with the ProductBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductBandwidthOk() (*string, bool) {
	if o == nil || isNil(o.ProductBandwidth) {
		return nil, false
	}
	return o.ProductBandwidth, true
}

// HasProductBandwidth returns a boolean if a field has been set.
func (o *Stock) HasProductBandwidth() bool {
	if o != nil && !isNil(o.ProductBandwidth) {
		return true
	}

	return false
}

// SetProductBandwidth gets a reference to the given string and assigns it to the ProductBandwidth field.
func (o *Stock) SetProductBandwidth(v string) {
	o.ProductBandwidth = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *Stock) GetProductId() int32 {
	if o == nil || isNil(o.ProductId) {
		var ret int32
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductIdOk() (*int32, bool) {
	if o == nil || isNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *Stock) HasProductId() bool {
	if o != nil && !isNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given int32 and assigns it to the ProductId field.
func (o *Stock) SetProductId(v int32) {
	o.ProductId = &v
}

// GetProductMonthlyPrice returns the ProductMonthlyPrice field value if set, zero value otherwise.
func (o *Stock) GetProductMonthlyPrice() float32 {
	if o == nil || isNil(o.ProductMonthlyPrice) {
		var ret float32
		return ret
	}
	return *o.ProductMonthlyPrice
}

// GetProductMonthlyPriceOk returns a tuple with the ProductMonthlyPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductMonthlyPriceOk() (*float32, bool) {
	if o == nil || isNil(o.ProductMonthlyPrice) {
		return nil, false
	}
	return o.ProductMonthlyPrice, true
}

// HasProductMonthlyPrice returns a boolean if a field has been set.
func (o *Stock) HasProductMonthlyPrice() bool {
	if o != nil && !isNil(o.ProductMonthlyPrice) {
		return true
	}

	return false
}

// SetProductMonthlyPrice gets a reference to the given float32 and assigns it to the ProductMonthlyPrice field.
func (o *Stock) SetProductMonthlyPrice(v float32) {
	o.ProductMonthlyPrice = &v
}

// GetProductTriennialPrice returns the ProductTriennialPrice field value if set, zero value otherwise.
func (o *Stock) GetProductTriennialPrice() float32 {
	if o == nil || isNil(o.ProductTriennialPrice) {
		var ret float32
		return ret
	}
	return *o.ProductTriennialPrice
}

// GetProductTriennialPriceOk returns a tuple with the ProductTriennialPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductTriennialPriceOk() (*float32, bool) {
	if o == nil || isNil(o.ProductTriennialPrice) {
		return nil, false
	}
	return o.ProductTriennialPrice, true
}

// HasProductTriennialPrice returns a boolean if a field has been set.
func (o *Stock) HasProductTriennialPrice() bool {
	if o != nil && !isNil(o.ProductTriennialPrice) {
		return true
	}

	return false
}

// SetProductTriennialPrice gets a reference to the given float32 and assigns it to the ProductTriennialPrice field.
func (o *Stock) SetProductTriennialPrice(v float32) {
	o.ProductTriennialPrice = &v
}

// GetProductCpu returns the ProductCpu field value if set, zero value otherwise.
func (o *Stock) GetProductCpu() string {
	if o == nil || isNil(o.ProductCpu) {
		var ret string
		return ret
	}
	return *o.ProductCpu
}

// GetProductCpuOk returns a tuple with the ProductCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductCpuOk() (*string, bool) {
	if o == nil || isNil(o.ProductCpu) {
		return nil, false
	}
	return o.ProductCpu, true
}

// HasProductCpu returns a boolean if a field has been set.
func (o *Stock) HasProductCpu() bool {
	if o != nil && !isNil(o.ProductCpu) {
		return true
	}

	return false
}

// SetProductCpu gets a reference to the given string and assigns it to the ProductCpu field.
func (o *Stock) SetProductCpu(v string) {
	o.ProductCpu = &v
}

// GetProductCpuCores returns the ProductCpuCores field value if set, zero value otherwise.
func (o *Stock) GetProductCpuCores() string {
	if o == nil || isNil(o.ProductCpuCores) {
		var ret string
		return ret
	}
	return *o.ProductCpuCores
}

// GetProductCpuCoresOk returns a tuple with the ProductCpuCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductCpuCoresOk() (*string, bool) {
	if o == nil || isNil(o.ProductCpuCores) {
		return nil, false
	}
	return o.ProductCpuCores, true
}

// HasProductCpuCores returns a boolean if a field has been set.
func (o *Stock) HasProductCpuCores() bool {
	if o != nil && !isNil(o.ProductCpuCores) {
		return true
	}

	return false
}

// SetProductCpuCores gets a reference to the given string and assigns it to the ProductCpuCores field.
func (o *Stock) SetProductCpuCores(v string) {
	o.ProductCpuCores = &v
}

// GetProductGpu returns the ProductGpu field value if set, zero value otherwise.
func (o *Stock) GetProductGpu() string {
	if o == nil || isNil(o.ProductGpu) {
		var ret string
		return ret
	}
	return *o.ProductGpu
}

// GetProductGpuOk returns a tuple with the ProductGpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductGpuOk() (*string, bool) {
	if o == nil || isNil(o.ProductGpu) {
		return nil, false
	}
	return o.ProductGpu, true
}

// HasProductGpu returns a boolean if a field has been set.
func (o *Stock) HasProductGpu() bool {
	if o != nil && !isNil(o.ProductGpu) {
		return true
	}

	return false
}

// SetProductGpu gets a reference to the given string and assigns it to the ProductGpu field.
func (o *Stock) SetProductGpu(v string) {
	o.ProductGpu = &v
}

// GetQuarterlyLocationPremium returns the QuarterlyLocationPremium field value if set, zero value otherwise.
func (o *Stock) GetQuarterlyLocationPremium() float32 {
	if o == nil || isNil(o.QuarterlyLocationPremium) {
		var ret float32
		return ret
	}
	return *o.QuarterlyLocationPremium
}

// GetQuarterlyLocationPremiumOk returns a tuple with the QuarterlyLocationPremium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetQuarterlyLocationPremiumOk() (*float32, bool) {
	if o == nil || isNil(o.QuarterlyLocationPremium) {
		return nil, false
	}
	return o.QuarterlyLocationPremium, true
}

// HasQuarterlyLocationPremium returns a boolean if a field has been set.
func (o *Stock) HasQuarterlyLocationPremium() bool {
	if o != nil && !isNil(o.QuarterlyLocationPremium) {
		return true
	}

	return false
}

// SetQuarterlyLocationPremium gets a reference to the given float32 and assigns it to the QuarterlyLocationPremium field.
func (o *Stock) SetQuarterlyLocationPremium(v float32) {
	o.QuarterlyLocationPremium = &v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *Stock) GetProductName() string {
	if o == nil || isNil(o.ProductName) {
		var ret string
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductNameOk() (*string, bool) {
	if o == nil || isNil(o.ProductName) {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *Stock) HasProductName() bool {
	if o != nil && !isNil(o.ProductName) {
		return true
	}

	return false
}

// SetProductName gets a reference to the given string and assigns it to the ProductName field.
func (o *Stock) SetProductName(v string) {
	o.ProductName = &v
}

// GetProductQuarterlyPrice returns the ProductQuarterlyPrice field value if set, zero value otherwise.
func (o *Stock) GetProductQuarterlyPrice() float32 {
	if o == nil || isNil(o.ProductQuarterlyPrice) {
		var ret float32
		return ret
	}
	return *o.ProductQuarterlyPrice
}

// GetProductQuarterlyPriceOk returns a tuple with the ProductQuarterlyPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductQuarterlyPriceOk() (*float32, bool) {
	if o == nil || isNil(o.ProductQuarterlyPrice) {
		return nil, false
	}
	return o.ProductQuarterlyPrice, true
}

// HasProductQuarterlyPrice returns a boolean if a field has been set.
func (o *Stock) HasProductQuarterlyPrice() bool {
	if o != nil && !isNil(o.ProductQuarterlyPrice) {
		return true
	}

	return false
}

// SetProductQuarterlyPrice gets a reference to the given float32 and assigns it to the ProductQuarterlyPrice field.
func (o *Stock) SetProductQuarterlyPrice(v float32) {
	o.ProductQuarterlyPrice = &v
}

// GetProductOnSale returns the ProductOnSale field value if set, zero value otherwise.
func (o *Stock) GetProductOnSale() bool {
	if o == nil || isNil(o.ProductOnSale) {
		var ret bool
		return ret
	}
	return *o.ProductOnSale
}

// GetProductOnSaleOk returns a tuple with the ProductOnSale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductOnSaleOk() (*bool, bool) {
	if o == nil || isNil(o.ProductOnSale) {
		return nil, false
	}
	return o.ProductOnSale, true
}

// HasProductOnSale returns a boolean if a field has been set.
func (o *Stock) HasProductOnSale() bool {
	if o != nil && !isNil(o.ProductOnSale) {
		return true
	}

	return false
}

// SetProductOnSale gets a reference to the given bool and assigns it to the ProductOnSale field.
func (o *Stock) SetProductOnSale(v bool) {
	o.ProductOnSale = &v
}

// GetProductMemory returns the ProductMemory field value if set, zero value otherwise.
func (o *Stock) GetProductMemory() string {
	if o == nil || isNil(o.ProductMemory) {
		var ret string
		return ret
	}
	return *o.ProductMemory
}

// GetProductMemoryOk returns a tuple with the ProductMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductMemoryOk() (*string, bool) {
	if o == nil || isNil(o.ProductMemory) {
		return nil, false
	}
	return o.ProductMemory, true
}

// HasProductMemory returns a boolean if a field has been set.
func (o *Stock) HasProductMemory() bool {
	if o != nil && !isNil(o.ProductMemory) {
		return true
	}

	return false
}

// SetProductMemory gets a reference to the given string and assigns it to the ProductMemory field.
func (o *Stock) SetProductMemory(v string) {
	o.ProductMemory = &v
}

// GetProcessorInfo returns the ProcessorInfo field value if set, zero value otherwise.
func (o *Stock) GetProcessorInfo() map[string]interface{} {
	if o == nil || isNil(o.ProcessorInfo) {
		var ret map[string]interface{}
		return ret
	}
	return o.ProcessorInfo
}

// GetProcessorInfoOk returns a tuple with the ProcessorInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProcessorInfoOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.ProcessorInfo) {
		return map[string]interface{}{}, false
	}
	return o.ProcessorInfo, true
}

// HasProcessorInfo returns a boolean if a field has been set.
func (o *Stock) HasProcessorInfo() bool {
	if o != nil && !isNil(o.ProcessorInfo) {
		return true
	}

	return false
}

// SetProcessorInfo gets a reference to the given map[string]interface{} and assigns it to the ProcessorInfo field.
func (o *Stock) SetProcessorInfo(v map[string]interface{}) {
	o.ProcessorInfo = v
}

// GetProductDisabledBillingPeriods returns the ProductDisabledBillingPeriods field value if set, zero value otherwise.
func (o *Stock) GetProductDisabledBillingPeriods() []string {
	if o == nil || isNil(o.ProductDisabledBillingPeriods) {
		var ret []string
		return ret
	}
	return o.ProductDisabledBillingPeriods
}

// GetProductDisabledBillingPeriodsOk returns a tuple with the ProductDisabledBillingPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductDisabledBillingPeriodsOk() ([]string, bool) {
	if o == nil || isNil(o.ProductDisabledBillingPeriods) {
		return nil, false
	}
	return o.ProductDisabledBillingPeriods, true
}

// HasProductDisabledBillingPeriods returns a boolean if a field has been set.
func (o *Stock) HasProductDisabledBillingPeriods() bool {
	if o != nil && !isNil(o.ProductDisabledBillingPeriods) {
		return true
	}

	return false
}

// SetProductDisabledBillingPeriods gets a reference to the given []string and assigns it to the ProductDisabledBillingPeriods field.
func (o *Stock) SetProductDisabledBillingPeriods(v []string) {
	o.ProductDisabledBillingPeriods = v
}

// GetProductDisplayPrice returns the ProductDisplayPrice field value if set, zero value otherwise.
func (o *Stock) GetProductDisplayPrice() float32 {
	if o == nil || isNil(o.ProductDisplayPrice) {
		var ret float32
		return ret
	}
	return *o.ProductDisplayPrice
}

// GetProductDisplayPriceOk returns a tuple with the ProductDisplayPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Stock) GetProductDisplayPriceOk() (*float32, bool) {
	if o == nil || isNil(o.ProductDisplayPrice) {
		return nil, false
	}
	return o.ProductDisplayPrice, true
}

// HasProductDisplayPrice returns a boolean if a field has been set.
func (o *Stock) HasProductDisplayPrice() bool {
	if o != nil && !isNil(o.ProductDisplayPrice) {
		return true
	}

	return false
}

// SetProductDisplayPrice gets a reference to the given float32 and assigns it to the ProductDisplayPrice field.
func (o *Stock) SetProductDisplayPrice(v float32) {
	o.ProductDisplayPrice = &v
}

func (o Stock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DataCenter) {
		toSerialize["data_center"] = o.DataCenter
	}
	if !isNil(o.HourlyLocationPremium) {
		toSerialize["hourly_location_premium"] = o.HourlyLocationPremium
	}
	if !isNil(o.ProductDrive) {
		toSerialize["product_drive"] = o.ProductDrive
	}
	if !isNil(o.Edge) {
		toSerialize["edge"] = o.Edge
	}
	if !isNil(o.Stock) {
		toSerialize["stock"] = o.Stock
	}
	if !isNil(o.ProductBiennialPrice) {
		toSerialize["product_biennial_price"] = o.ProductBiennialPrice
	}
	if !isNil(o.BiennialLocationPremium) {
		toSerialize["biennial_location_premium"] = o.BiennialLocationPremium
	}
	if !isNil(o.MonthlyLocationPremium) {
		toSerialize["monthly_location_premium"] = o.MonthlyLocationPremium
	}
	if !isNil(o.ProductHourlyPrice) {
		toSerialize["product_hourly_price"] = o.ProductHourlyPrice
	}
	if !isNil(o.TriennialLocationPremium) {
		toSerialize["triennial_location_premium"] = o.TriennialLocationPremium
	}
	if !isNil(o.Core) {
		toSerialize["core"] = o.Core
	}
	if !isNil(o.AnnuallyLocationPremium) {
		toSerialize["annually_location_premium"] = o.AnnuallyLocationPremium
	}
	if !isNil(o.ProductOriginalPrice) {
		toSerialize["product_original_price"] = o.ProductOriginalPrice
	}
	if !isNil(o.ProductAnnuallyPrice) {
		toSerialize["product_annually_price"] = o.ProductAnnuallyPrice
	}
	if !isNil(o.SemiAnnuallyLocationPremium) {
		toSerialize["semi_annually_location_premium"] = o.SemiAnnuallyLocationPremium
	}
	if !isNil(o.ProductSemiAnnuallyPrice) {
		toSerialize["product_semi_annually_price"] = o.ProductSemiAnnuallyPrice
	}
	if !isNil(o.ProductBandwidth) {
		toSerialize["product_bandwidth"] = o.ProductBandwidth
	}
	if !isNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !isNil(o.ProductMonthlyPrice) {
		toSerialize["product_monthly_price"] = o.ProductMonthlyPrice
	}
	if !isNil(o.ProductTriennialPrice) {
		toSerialize["product_triennial_price"] = o.ProductTriennialPrice
	}
	if !isNil(o.ProductCpu) {
		toSerialize["product_cpu"] = o.ProductCpu
	}
	if !isNil(o.ProductCpuCores) {
		toSerialize["product_cpu_cores"] = o.ProductCpuCores
	}
	if !isNil(o.ProductGpu) {
		toSerialize["product_gpu"] = o.ProductGpu
	}
	if !isNil(o.QuarterlyLocationPremium) {
		toSerialize["quarterly_location_premium"] = o.QuarterlyLocationPremium
	}
	if !isNil(o.ProductName) {
		toSerialize["product_name"] = o.ProductName
	}
	if !isNil(o.ProductQuarterlyPrice) {
		toSerialize["product_quarterly_price"] = o.ProductQuarterlyPrice
	}
	if !isNil(o.ProductOnSale) {
		toSerialize["product_on_sale"] = o.ProductOnSale
	}
	if !isNil(o.ProductMemory) {
		toSerialize["product_memory"] = o.ProductMemory
	}
	if !isNil(o.ProcessorInfo) {
		toSerialize["processor_info"] = o.ProcessorInfo
	}
	if !isNil(o.ProductDisabledBillingPeriods) {
		toSerialize["product_disabled_billing_periods"] = o.ProductDisabledBillingPeriods
	}
	if !isNil(o.ProductDisplayPrice) {
		toSerialize["product_display_price"] = o.ProductDisplayPrice
	}
	return json.Marshal(toSerialize)
}

type NullableStock struct {
	value *Stock
	isSet bool
}

func (v NullableStock) Get() *Stock {
	return v.value
}

func (v *NullableStock) Set(val *Stock) {
	v.value = val
	v.isSet = true
}

func (v NullableStock) IsSet() bool {
	return v.isSet
}

func (v *NullableStock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStock(val *Stock) *NullableStock {
	return &NullableStock{value: val, isSet: true}
}

func (v NullableStock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
