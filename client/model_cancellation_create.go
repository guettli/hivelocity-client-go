/*
Hivelocity API

Interact with Hivelocity

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// CancellationCreate struct for CancellationCreate
type CancellationCreate struct {
	// Unique ID of a device. Must be related to `service_id`.
	DeviceId int32 `json:"deviceId"`
	// Unique ID of a service. Must be related to `device_id`.
	ServiceId int32 `json:"serviceId"`
	// My current service is being upgraded|Hardware/software/network or power issues|I think I have found a better deal|I have experienced tech support problems|I am consolidating my Hivelocity accounts|I am a reseller and my customer cancelled|I am moving to a different technology solution: Public Cloud|I am moving to a different technology solution: Managed Hosting Company|A product difference (Example: AWS)
	Reason string `json:"reason"`
	// Details why the device is being cancelled
	Comments *string `json:"comments,omitempty"`
}

// NewCancellationCreate instantiates a new CancellationCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancellationCreate(deviceId int32, serviceId int32, reason string) *CancellationCreate {
	this := CancellationCreate{}
	this.DeviceId = deviceId
	this.ServiceId = serviceId
	this.Reason = reason
	return &this
}

// NewCancellationCreateWithDefaults instantiates a new CancellationCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancellationCreateWithDefaults() *CancellationCreate {
	this := CancellationCreate{}
	return &this
}

// GetDeviceId returns the DeviceId field value
func (o *CancellationCreate) GetDeviceId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value
// and a boolean to check if the value has been set.
func (o *CancellationCreate) GetDeviceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceId, true
}

// SetDeviceId sets field value
func (o *CancellationCreate) SetDeviceId(v int32) {
	o.DeviceId = v
}

// GetServiceId returns the ServiceId field value
func (o *CancellationCreate) GetServiceId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *CancellationCreate) GetServiceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *CancellationCreate) SetServiceId(v int32) {
	o.ServiceId = v
}

// GetReason returns the Reason field value
func (o *CancellationCreate) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *CancellationCreate) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *CancellationCreate) SetReason(v string) {
	o.Reason = v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *CancellationCreate) GetComments() string {
	if o == nil || isNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancellationCreate) GetCommentsOk() (*string, bool) {
	if o == nil || isNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *CancellationCreate) HasComments() bool {
	if o != nil && !isNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *CancellationCreate) SetComments(v string) {
	o.Comments = &v
}

func (o CancellationCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["deviceId"] = o.DeviceId
	}
	if true {
		toSerialize["serviceId"] = o.ServiceId
	}
	if true {
		toSerialize["reason"] = o.Reason
	}
	if !isNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	return json.Marshal(toSerialize)
}

type NullableCancellationCreate struct {
	value *CancellationCreate
	isSet bool
}

func (v NullableCancellationCreate) Get() *CancellationCreate {
	return v.value
}

func (v *NullableCancellationCreate) Set(val *CancellationCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableCancellationCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableCancellationCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancellationCreate(val *CancellationCreate) *NullableCancellationCreate {
	return &NullableCancellationCreate{value: val, isSet: true}
}

func (v NullableCancellationCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancellationCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
