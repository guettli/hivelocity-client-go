/*
Hivelocity API

Interact with Hivelocity

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// TicketCreate struct for TicketCreate
type TicketCreate struct {
	Body       *string  `json:"body,omitempty"`
	Status     *string  `json:"status,omitempty"`
	Subject    string   `json:"subject"`
	Source     *float32 `json:"source,omitempty"`
	Priority   *float32 `json:"priority,omitempty"`
	Queue      string   `json:"queue"`
	Assignment *float32 `json:"assignment,omitempty"`
}

// NewTicketCreate instantiates a new TicketCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTicketCreate(subject string, queue string) *TicketCreate {
	this := TicketCreate{}
	this.Subject = subject
	this.Queue = queue
	return &this
}

// NewTicketCreateWithDefaults instantiates a new TicketCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTicketCreateWithDefaults() *TicketCreate {
	this := TicketCreate{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *TicketCreate) GetBody() string {
	if o == nil || isNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketCreate) GetBodyOk() (*string, bool) {
	if o == nil || isNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *TicketCreate) HasBody() bool {
	if o != nil && !isNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *TicketCreate) SetBody(v string) {
	o.Body = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TicketCreate) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketCreate) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TicketCreate) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TicketCreate) SetStatus(v string) {
	o.Status = &v
}

// GetSubject returns the Subject field value
func (o *TicketCreate) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *TicketCreate) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *TicketCreate) SetSubject(v string) {
	o.Subject = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *TicketCreate) GetSource() float32 {
	if o == nil || isNil(o.Source) {
		var ret float32
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketCreate) GetSourceOk() (*float32, bool) {
	if o == nil || isNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *TicketCreate) HasSource() bool {
	if o != nil && !isNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given float32 and assigns it to the Source field.
func (o *TicketCreate) SetSource(v float32) {
	o.Source = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *TicketCreate) GetPriority() float32 {
	if o == nil || isNil(o.Priority) {
		var ret float32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketCreate) GetPriorityOk() (*float32, bool) {
	if o == nil || isNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *TicketCreate) HasPriority() bool {
	if o != nil && !isNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given float32 and assigns it to the Priority field.
func (o *TicketCreate) SetPriority(v float32) {
	o.Priority = &v
}

// GetQueue returns the Queue field value
func (o *TicketCreate) GetQueue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Queue
}

// GetQueueOk returns a tuple with the Queue field value
// and a boolean to check if the value has been set.
func (o *TicketCreate) GetQueueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Queue, true
}

// SetQueue sets field value
func (o *TicketCreate) SetQueue(v string) {
	o.Queue = v
}

// GetAssignment returns the Assignment field value if set, zero value otherwise.
func (o *TicketCreate) GetAssignment() float32 {
	if o == nil || isNil(o.Assignment) {
		var ret float32
		return ret
	}
	return *o.Assignment
}

// GetAssignmentOk returns a tuple with the Assignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TicketCreate) GetAssignmentOk() (*float32, bool) {
	if o == nil || isNil(o.Assignment) {
		return nil, false
	}
	return o.Assignment, true
}

// HasAssignment returns a boolean if a field has been set.
func (o *TicketCreate) HasAssignment() bool {
	if o != nil && !isNil(o.Assignment) {
		return true
	}

	return false
}

// SetAssignment gets a reference to the given float32 and assigns it to the Assignment field.
func (o *TicketCreate) SetAssignment(v float32) {
	o.Assignment = &v
}

func (o TicketCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["subject"] = o.Subject
	}
	if !isNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !isNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if true {
		toSerialize["queue"] = o.Queue
	}
	if !isNil(o.Assignment) {
		toSerialize["assignment"] = o.Assignment
	}
	return json.Marshal(toSerialize)
}

type NullableTicketCreate struct {
	value *TicketCreate
	isSet bool
}

func (v NullableTicketCreate) Get() *TicketCreate {
	return v.value
}

func (v *NullableTicketCreate) Set(val *TicketCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableTicketCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableTicketCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTicketCreate(val *TicketCreate) *NullableTicketCreate {
	return &NullableTicketCreate{value: val, isSet: true}
}

func (v NullableTicketCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTicketCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
