/*
Hivelocity API

Interact with Hivelocity

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PublicApiTokenLoad struct for PublicApiTokenLoad
type PublicApiTokenLoad struct {
	Name        *string           `json:"name,omitempty"`
	IpAddresses *PublicApiTokenIp `json:"ipAddresses,omitempty"`
}

// NewPublicApiTokenLoad instantiates a new PublicApiTokenLoad object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicApiTokenLoad() *PublicApiTokenLoad {
	this := PublicApiTokenLoad{}
	return &this
}

// NewPublicApiTokenLoadWithDefaults instantiates a new PublicApiTokenLoad object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicApiTokenLoadWithDefaults() *PublicApiTokenLoad {
	this := PublicApiTokenLoad{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PublicApiTokenLoad) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicApiTokenLoad) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PublicApiTokenLoad) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PublicApiTokenLoad) SetName(v string) {
	o.Name = &v
}

// GetIpAddresses returns the IpAddresses field value if set, zero value otherwise.
func (o *PublicApiTokenLoad) GetIpAddresses() PublicApiTokenIp {
	if o == nil || isNil(o.IpAddresses) {
		var ret PublicApiTokenIp
		return ret
	}
	return *o.IpAddresses
}

// GetIpAddressesOk returns a tuple with the IpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicApiTokenLoad) GetIpAddressesOk() (*PublicApiTokenIp, bool) {
	if o == nil || isNil(o.IpAddresses) {
		return nil, false
	}
	return o.IpAddresses, true
}

// HasIpAddresses returns a boolean if a field has been set.
func (o *PublicApiTokenLoad) HasIpAddresses() bool {
	if o != nil && !isNil(o.IpAddresses) {
		return true
	}

	return false
}

// SetIpAddresses gets a reference to the given PublicApiTokenIp and assigns it to the IpAddresses field.
func (o *PublicApiTokenLoad) SetIpAddresses(v PublicApiTokenIp) {
	o.IpAddresses = &v
}

func (o PublicApiTokenLoad) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.IpAddresses) {
		toSerialize["ipAddresses"] = o.IpAddresses
	}
	return json.Marshal(toSerialize)
}

type NullablePublicApiTokenLoad struct {
	value *PublicApiTokenLoad
	isSet bool
}

func (v NullablePublicApiTokenLoad) Get() *PublicApiTokenLoad {
	return v.value
}

func (v *NullablePublicApiTokenLoad) Set(val *PublicApiTokenLoad) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicApiTokenLoad) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicApiTokenLoad) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicApiTokenLoad(val *PublicApiTokenLoad) *NullablePublicApiTokenLoad {
	return &NullablePublicApiTokenLoad{value: val, isSet: true}
}

func (v NullablePublicApiTokenLoad) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicApiTokenLoad) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
