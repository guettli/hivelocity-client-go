/*
Hivelocity API

Interact with Hivelocity

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// DeviceIPMIThresholds struct for DeviceIPMIThresholds
type DeviceIPMIThresholds struct {
	// Alert thresholds for IPMI sensor values.
	Thresholds map[string]interface{} `json:"thresholds"`
}

// NewDeviceIPMIThresholds instantiates a new DeviceIPMIThresholds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceIPMIThresholds(thresholds map[string]interface{}) *DeviceIPMIThresholds {
	this := DeviceIPMIThresholds{}
	this.Thresholds = thresholds
	return &this
}

// NewDeviceIPMIThresholdsWithDefaults instantiates a new DeviceIPMIThresholds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceIPMIThresholdsWithDefaults() *DeviceIPMIThresholds {
	this := DeviceIPMIThresholds{}
	return &this
}

// GetThresholds returns the Thresholds field value
func (o *DeviceIPMIThresholds) GetThresholds() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Thresholds
}

// GetThresholdsOk returns a tuple with the Thresholds field value
// and a boolean to check if the value has been set.
func (o *DeviceIPMIThresholds) GetThresholdsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Thresholds, true
}

// SetThresholds sets field value
func (o *DeviceIPMIThresholds) SetThresholds(v map[string]interface{}) {
	o.Thresholds = v
}

func (o DeviceIPMIThresholds) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["thresholds"] = o.Thresholds
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceIPMIThresholds struct {
	value *DeviceIPMIThresholds
	isSet bool
}

func (v NullableDeviceIPMIThresholds) Get() *DeviceIPMIThresholds {
	return v.value
}

func (v *NullableDeviceIPMIThresholds) Set(val *DeviceIPMIThresholds) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceIPMIThresholds) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceIPMIThresholds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceIPMIThresholds(val *DeviceIPMIThresholds) *NullableDeviceIPMIThresholds {
	return &NullableDeviceIPMIThresholds{value: val, isSet: true}
}

func (v NullableDeviceIPMIThresholds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceIPMIThresholds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
