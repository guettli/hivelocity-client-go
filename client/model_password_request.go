/*
Hivelocity API

Interact with Hivelocity

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PasswordRequest struct for PasswordRequest
type PasswordRequest struct {
	Email string `json:"email"`
}

// NewPasswordRequest instantiates a new PasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPasswordRequest(email string) *PasswordRequest {
	this := PasswordRequest{}
	this.Email = email
	return &this
}

// NewPasswordRequestWithDefaults instantiates a new PasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPasswordRequestWithDefaults() *PasswordRequest {
	this := PasswordRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *PasswordRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *PasswordRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *PasswordRequest) SetEmail(v string) {
	o.Email = v
}

func (o PasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullablePasswordRequest struct {
	value *PasswordRequest
	isSet bool
}

func (v NullablePasswordRequest) Get() *PasswordRequest {
	return v.value
}

func (v *NullablePasswordRequest) Set(val *PasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePasswordRequest(val *PasswordRequest) *NullablePasswordRequest {
	return &NullablePasswordRequest{value: val, isSet: true}
}

func (v NullablePasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
